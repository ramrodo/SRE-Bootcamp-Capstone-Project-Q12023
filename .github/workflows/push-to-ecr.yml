name: publish-to-ecr

on:
  push:
    branches:
      - main
      - feature/deliver-final # REMOVE ME

permissions:
  id-token: write
  contents: read

env:
  AWS_ACCOUNT_ID: 381893098505
  AWS_REGION: us-west-2
  IMAGE_NAME: capstone-api

jobs:
  push-ecr:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::$AWS_ACCOUNT_ID:role/github-actions-role
        aws-region: us-west-2

    - name: Build container image
      run: docker build .
      working-directory: "capstone-api"

    - name: Log in to registry
      run: |
        aws ecr get-login-password --region $AWS_REGION | buildah login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

    - name: Push image
      run: |
        IMAGE_ID=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME

        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        # Use `latest` tag convention
        [ "$VERSION" == "main" ] && VERSION=latest

        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
